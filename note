// const port = 8000;
// const express = require("express");
// const app = express();
// const mongoose = require("mongoose");
// const jwt = require("jsonwebtoken");
// const multer = require("multer");
// const path = require("path");
// const cors = require("cors");

// app.use(express.json());
// app.use(cors());

// // Database mongoDB

// mongoose.connect("mongodb+srv://kittikulku64:Ft1u7reYTvAuc6rR@cluster0.xzzwni5.mongodb.net/e-commerce")


// //img storage
// const storage = multer.diskStorage({
//     destination:'./upload/images',
//     filename:(req,file,cb)=>{
//         return cb(null,`${file.fieldname}_${Date.now()}${path.extname(file.originalname)}`)
//     }
// })
// const upload = multer({storage:storage})

// //Upload Endpoint
// app.use('/images',express.static('upload/images'))
// app.post("/upload",upload.single('product'),(req,res)=>{
//     res.json({
//         success:1,
//         image_url:`http://localhost:${port}/images/${req.file.filename}`
//     })
// })


// // Schema product
// const Product = mongoose.model("Product",{
//     id:{
//         type: Number,
//         require:true,
//     },
//     name:{
//         type:String,
//         require:true,
//     },
//     image:{
//         type:String,
//         require:true,
//     },
//     category:{
//         type:String,
//         require:true,
//     },
//     new_price:{
//         type:Number,
//         require:true,
//     },
//     old_price:{
//         type:Number,
//         require:true,
//     },
//     date:{
//         type:Date,
//         default:Date.now,
//     },
//     avilable:{
//         type:Boolean,
//         default:true
//     }
// })

// //schema User
// const Users = mongoose.model('Users',{
//     name:{
//         type:String,
//     },
//     email:{
//         type:String,
//         unique:true,
//     },
//     password:{
//         type:String,
//     },
//     cartData:{
//         type:Object,
//     },
//     date:{
//         type:Date,
//         default:Date.now,
//     }
// })


// //endpoint register
// app.post('/signup', async (req,res)=>{

//     let check = await Users.findOne({email:req.body.email})
//     if (check) {
//         return res.status(400).json({success:false,errors:"existing user found"})
//     }
//     let cart = {}
//     for (let i = 0; i<50; i++){
//         cart[i]=0;
//     }
//     const user = new Users({
//         name:req.body.username,
//         email:req.body.email,
//         password:req.body.password,
//         cartData:cart,
//     })

//     await user.save()

//     const data = {
//         user:{
//             id:user.id
//         }
//     }

//     const token = jwt.sign(data,'secret_e')
//     res.json({success:true,token})

// })

// //endpoint login
// app.post('/login',async(req,res)=>{
//     let user = await Users.findOne({email:req.body.email})
//     if (user){
//         const passComare = req.body.password === user.password
//         if (passComare) {
//             const data = {
//                 user:{
//                     id:user.id
//                 }
//             }
//             const token = jwt.sign(data,'secret_e')
//             res.json({success:true,token})
//         }
//         else{
//             res.json({success:false,errors:"Wrong Password"})
//         }
//     }
//     else{
//         res.json({success:false,errors:"wrong email id"})
//     }
// })


// //Addproduct
// app.post('/addproduct', async (req,res)=>{
//     let products = await Product.find({})
//     let id
//     if(products.length>0){
//         let last_product_array = products.slice(-1)
//         let last_product = last_product_array[0]
//         id = last_product.id+1
//     }
//     else{
//         id=1

//     }

//     const product = new Product({
//         id:id,
//         name:req.body.name,
//         image:req.body.image,
//         category:req.body.category,
//         new_price:req.body.new_price,
//         old_price:req.body.old_price,
//     })
//     console.log(product)
//     await product.save()
//     console.log("Saved")
//     res.json({
//         success:true,
//         name:req.body.name,
//     })
// })

// //delete products
// app.post('/removeproduct',async (req,res)=>{
//     await Product.findOneAndDelete({id:req.body.id})
//     console.log("Removed")
//     res.json({
//         success:true,
//         name:req.body.name
//     })
// })




// //front
// //get all products
// app.get('/allproducts', async (req,res)=>{
//     let products = await Product.find({})
//     console.log("ALL Products Fetched")
//     res.send(products)
// })

// // endpoint newclloection
// app.get('/newcollecrtions', async(req,res)=>{
//     let products = await Product.find({})
//     let newcollecrtion = products.slice(1).slice(-8)
//     console.log("newcollection fetched")
//     res.send(newcollecrtion)
// })

// // endpoint poulars
// app.get('/poulars', async (req,res)=>{
//     let products = await Product.find({category:"women"})
//     let poular = products.slice(0,4)
//     console.log("Popular fetched")
//     res.send(poular)
// })

// //fetch user
// const fetchUser = async (req,res,next)=>{
//     const token = req.header('token');
//     if(!token) {
//         res.status(401).send({errors:"please authenticate"})
//     }
//     else{
//         try{
//             const data  = jwt.verify(token,'secret_e')
//             req.user = data.user
//             next()
//         } catch(error){
//             res.status(401).send({errors:"please authenticate"})
//         }
//     }
// }

// // endpoint add cart
// app.post('/addtocart',fetchUser, async (req,res)=>{
//     console.log("Add",req.body.itemId)
//     let userData =await Users.findOne({_id:req.user.id});
//     userData.cartData[req.body.itemId] +=1;
//     await Users.findOneAndUpdate({_id:req.user.id},{cartData:userData.cartData})
//     res.send("Add")
// })
// // endpoint remove cart
// app.post('/removefromcart',fetchUser,async(req,res)=>{
//     console.log("remove",req.body.itemId)
//     let userData =await Users.findOne({_id:req.user.id});
//     if(userData.cartData[req.body.itemId]>0)
//     userData.cartData[req.body.itemId] -=1;
//     await Users.findOneAndUpdate({_id:req.user.id},{cartData:userData.cartData})
//     res.send("remove")
// })
// // endpoint get cart
// app.post('/getcart',fetchUser,async (req,res)=>{
//     console.log("getcart")
//     let userData = await Users.findOne({_id:req.user.id})
//     res.json(userData.cartData)
// })


// //api

// app.get("/", (req,res)=>{
//     res.send("Exprees App is Runing")
// })

 



// app.listen(port,(error)=>{
//     if(!error){
//         console.log("Srever Running on Port"+port)
//     }
//     else{
//         console.log("Error : "+error)
//     }
// })