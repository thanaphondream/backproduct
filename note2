generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int     @id @default(autoincrement())
  role     Role    @default(USER)
  username String?
  email    String  @unique
  password String

  firstname String?
  lastname  String?
  phone     String?
  address   String?

  Order Order[]
  Cart  Cart[]
}

model Order {
  id       Int      @id @default(autoincrement())
  datetime DateTime @default(now()) @map("date-time")
  status   Status   @default(UNPAID)
  total    Int

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @map("user_id")

  cart        Cart          @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId      Int           @map("cart_id")
  History     History[]
  orderdetail orderdetail[]
}

// model Detail {
//   id Int @id @default(autoincrement())

//   cart   Cart @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
//   cartId Int  @map("cart_id")

//   product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
//   productId Int     @map("product_id")
// }

enum Status {
  UNPAID
  PREPARED
  SHIPPED
  DELIVERED
  CANCELLED
}

model Cart {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int  @map("user_id")

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int      @map("product_id")
  Order     Order[]

}

model History {
  id      Int   @id @default(autoincrement())
  order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId Int   @map("order_id")
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  price       Int
  unit        Int           @default(1)
  decription  String
  url         String
  author      String
  productType Product_type  @relation(fields: [protypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  protypeId   Int           @map("productType_id")

  orderdetail orderdetail[]
  Cart        Cart[]
}

model Product_type {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model orderdetail {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int     @map("product_id")
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  orderId   Int     @map("order_id")
}